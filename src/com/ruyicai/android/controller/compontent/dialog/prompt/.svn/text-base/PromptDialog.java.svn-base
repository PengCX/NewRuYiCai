package com.ruyicai.android.controller.compontent.dialog.prompt;

import com.ruyicai.android.R;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.res.Resources;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

/**
 * 提示对话框类：拥有标题，内容，确定和取消按钮布局
 *
 * @author xiang_000
 * @since RYC1.0 2013-3-30
 */
public abstract class PromptDialog extends AlertDialog{

	/** 上下文对象 */
	protected Context _fContext;
	/**资源对象*/
	protected Resources _fResources;

	/** 标题文本 */
	protected String _fTitleString;
	/** 消息文本 */
	protected String _fMessageString;
	/** 确定按钮文本 */
	protected String _fPositiveButtonString;
	/** 取消按钮文本 */
	protected String _fNegativeButtonString;

	/** 内容视图 */
	private View _fView;

	/** 确定按钮事件监听器接口 */
	protected DialogInterface.OnClickListener _fPositiveButtonClickListener;
	/** 取消按钮事件监听器接口 */
	protected DialogInterface.OnClickListener _fNegativeButtOnClickListener;

	public PromptDialog(Context aContext) {
		super(aContext);
		_fContext = aContext;
		_fResources = _fContext.getResources();
	}

	/**
	 * 设置提示对话框标题文本
	 */
	public abstract void set_fTitleString();

	/**
	 * 设置提示对话框消息内容
	 */
	public abstract void set_fMessageString();

	/**
	 * 设置提示对话框确定按钮文本和事件监听器
	 */
	public abstract void set_fPositiveButton();

	/**
	 * 设置提示对话框取消按钮文本和事件监听器
	 */
	public abstract void set_fNegativeButton();

	/**
	 * 设置对话框视图
	 *
	 * @param aContentView
	 *            视图对象
	 * @return Builder对象
	 */
	public void set_fView() {
		LayoutInflater inflater = (LayoutInflater) _fContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		_fView = inflater.inflate(R.layout.prompt_dialog, null);
	}

	/**
	 * 创建软件更新对话框按钮
	 *
	 */
	public void create(final Dialog aDialog) {

		// 设置对话框布局
		assert (_fView == null) : "错误：没有设置软件更新对话框的布局视图对象！";
		//FIXME 添加改行代码，使得对话框无边框！！！
		aDialog.show();
		aDialog.getWindow().setContentView(_fView);

		// 设置标题文本
		if (_fTitleString != null) {
			((TextView) _fView.findViewById(R.id.promptdialog_textview_title)).setText(_fTitleString);
		} else {
			_fView.findViewById(R.id.promptdialog_textview_title).setVisibility(View.GONE);
		}

		// 设置内容消息
		if (_fMessageString != null) {
			((TextView) _fView.findViewById(R.id.promptdialog_textview_message)).setText(_fMessageString);
		} else {
			_fView.findViewById(R.id.promptdialog_textview_message).setVisibility(View.GONE);
		}

		// 设置确定按钮
		if (_fPositiveButtonString != null) {
			((Button) _fView.findViewById(R.id.promptdialog_button_positive)).setText(_fPositiveButtonString);
			if (_fPositiveButtonClickListener != null) {
				((Button) _fView.findViewById(R.id.promptdialog_button_positive)).setOnClickListener(new View.OnClickListener() {

					@Override
					public void onClick(View v) {
						_fPositiveButtonClickListener.onClick(aDialog, DialogInterface.BUTTON_POSITIVE);
					}
				});
			}
		} else {
			// 如果没有确定按钮，仅仅设置该按钮可见性为GONE
			_fView.findViewById(R.id.promptdialog_button_positive).setVisibility(View.GONE);
		}

		// 设置取消按钮
		if (_fNegativeButtonString != null) {
			((Button) _fView.findViewById(R.id.promptdialog_button_negative)).setText(_fNegativeButtonString);
			if (_fNegativeButtOnClickListener != null) {
				((Button) _fView.findViewById(R.id.promptdialog_button_negative)).setOnClickListener(new View.OnClickListener() {

					@Override
					public void onClick(View v) {
						_fNegativeButtOnClickListener.onClick(aDialog, DialogInterface.BUTTON_NEGATIVE);
					}
				});
			}
		} else {
			// 如果没有取消按钮，仅仅设置该按钮的可见性为GONE
			_fView.findViewById(R.id.promptdialog_button_negative).setVisibility(View.GONE);
		}
	}
}
